x=0 y=0 z=0 i=5 x2=0 y2=0 z2=0//+:AUTO
x-=:X y-=:Y z-=:Z x2+=:x2-:x y2+=:y2-:y z2+=:z2-:z goto 2+(i--==0)               //maybe not every tick (can check global inc)
j=10 i=5 m=:DX+x/6 n=:DY+y/6 o=:DZ+z/6  //x2/=6 y2/=6 z2/=6
goto 4+(j--==0)
x+=:X y+=:Y z+=:Z goto 5+(i--==0)               //maybe not every tick
a=y*z2-z*y2 b=z*x2-x*z2 c=x*y2-y*x2 v=sqrt(a^2+b^2+c^2) a/=v b/=v c/=v       //(a,b,c) = (x2,y2,z2) X (dir)
v=sqrt(x^2+y^2+z^2) x/=v y/=v z/=v  v=sqrt(m^2+n^2+o^2) m/=v n/=v o/=v



u=m*((x*c-z*a)*c-b*(y*a-x*b))+n*(a*(y*a-x*b)-(z*b-y*c)*c)  //assuming 0 roll
v=m*(b*z-y*c)+n*(x*c-a*z)+o*(a*y-x*b) u+=o*((z*b-y*c)*b-a*(x*c-z*a))
w=m*(y*(y*a-x*b)-(x*c-z*a)*z)+n*((z*b-y*c)*z-x*(y*a-x*b))   
w+=o*(x*(x*c-z*a)-(z*b-y*c)*y)


j=20 i=50 ly=0 lp=0 goto 20-2*(u<0.999)  //up 0.99
if v*v>w*w then ly=i*(v+2*(1-v)*(u<0)) else lp=i*(w+2*(1-w)*(u<0)) end                  //need to store calibration shit
:yaw=ly :pitch=lp
goto 20-19*(j--==0)


//left vector from (x,y,z) -> (x2,y2,z2), so (x2-x, y2-y, z2-z)