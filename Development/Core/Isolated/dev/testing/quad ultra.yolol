




//Tick 0
//  recv A
//  recv B
//  recv C
//  recv D
//  chip

//Tick 2
//  recv A
//  recv B
//  recv C
//  recv D
//  chip        (no updates, used old values)

//Tick 4
//  recv A
//  recv B
//  recv C
//  recv D
//  chip        want( 2, 2, 2, 2) cur( 4, 4, 4, 4) last( 2, 2, 2, 2)                            |  lastwant = want( 2, 2, 2, 2)   last = cur( 4, 4, 4, 4)
//...

//Tick 6
//  recv A
//  recv B  
//  chip        want( 4, 4, 4, 4) cur( 6, 6, 4, 4) last( 4, 4, 4, 4) lastwant( 2, 2, 2, 2)      |  lastwant = want( 4, 4, 4, 4)   last = cur( 6, 6, 4, 4)
//  recv C                  pickCur?=( 0, 0, ?, ?)
//  recv D

//Tick 8
//  recv A
//  recv B  
//  chip        want( 6, 6, 6, 6) cur( 8, 8, 6, 6) last( 6, 6, 4, 4)                            | last = cur( 8, 8, 6, 6)
//  recv C                  pickCur?=( 0, 0, 1, 1)      
//  recv D                  

//Tick 10
//  recv A
//  recv B  
//  chip        want( 8, 8, 8, 8) cur(10,10, 8, 8) last( 8, 8, 6, 6)                            | last = cur(10,10, 8, 8)
//  recv C                  pickCur?=( 0, 0, 1, 1)              
//  recv D

//Tick 12
//  recv A
//  chip        want(10,10,10,10) cur(12,10,10,10) last(10,10, 8, 8)                            | last = cur(12,10,10,10)
//  recv B                  pickCur?=( 0, ?, 1, 1) |=(last==cur)
//  recv C      
//  recv D

//Tick 14
//  recv A
//  chip        want(12,12,12,12) cur(14,12,12,12) last(12,10,10,10)                            | last = cur(14,12,12,12)
//  recv B                  pickCur?=( 0, 1, 1, 1)
//  recv C      
//  recv D

//chip

//Tick 16
//  recv A
//  recv B
//  recv C      settle(16,16,16,14)
//  chip        want(14,14,14,14) cur(16,16,16,14) last(14,12,12,12)                            | last = cur(16,16,16,14)  
//  recv D                  pickCur?=(1,1,1,0)

//Tick 18
//  recv A
//  recv B
//  recv C    
//  chip        want(16,16,16,16) cur(18,18,18,16) cur(16,16,16,14)                            | last =
//  recv D                  pickCur?=(1,1,1,0)



//Aim is to use the values from last tick.



//--+----|----+----|----+----|----+----|----+----|----+----|----+----|
:DT="s10tion_" :AT=:DT+"hq_imperial_a" :BT=:DT+"proving_grounds"            //Not final values
:CT=:DT+"kingdom_outpost_b" :DT+="kingdom_outpost_b_2" t=999999             //Not final values
e= 207744.954 f=-1550111.534 g=486779.292 h=-160699.392 i=-46169.175        //Not final values
j=-140483.070 k=  103669.797 l=799664.698 m=-264673.522 n= -4718.935        //Not final values
o=-230400.908 p=  345153.593 q= 41051.448 r= -43636.344 s= -1606.533        //Not final values
a=(t-:A)^2 b=(t-:B)^2 c=(t-:C)^2 d=(t-:D)^2
:X=a/e+b/f+c/g+d/h-i :Y=a/j+b/k+c/l+d/m-n :Z=a/o+b/p+c/q+d/r-s goto 6
//--+----|----+----|----+----|----+----|----+----|----+----|----+----|
w=1000 x="\nX:" y="\nY:" z="\nZ:"
:DISP=x+:X/w*w+y+:Y/w*w+z+:Z/w*w goto 2
//--+----|----+----|----+----|----+----|----+----|----+----|----+----|
t="\n"
:test=t+a==:A+t+b==:B+t+c==:C+t+d==:D a=:A b=:B c=:C d=:D goto2
//--+----|----+----|----+----|----+----|----+----|----+----|----+----|

//recv A
//recv B
//chip hold(A,B) output(lA,lB,C,D)
//recv C
//recv D

//recv A
//recv B
//chip output(lA,lB,C,D)
//recv C
//recv D

//if updated, set to old. if not, set to updated? 
:L=a+(:A-a)*(a==:A) :M=b+(:B-b)*(b==:B) a=:A b=:B nc=:C nd=:D
:N=c+(nc-c)*(c==nc) :O=d+(nd-d)*(d==nd) c=nc d=nd goto 1

//--+----|----+----|----+----|----+----|----+----|----+----|----+----|